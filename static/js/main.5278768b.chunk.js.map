{"version":3,"sources":["components/Profile/Profile.js","components/Statistic/StatisticItem.js","components/Statistic/Statistics.js","components/FriendsList/FriensListItems.js","components/FriendsList/FriendsList.js","components/Transactions/TransactionItem.js","components/Transactions/Transactions.js","App.js","index.js"],"names":["Profile","profileData","avatar","name","tag","location","stats","className","src","alt","width","followers","views","likes","StatisticItem","props","label","percentage","Statistics","statsData","title","toUpperCase","map","item","id","style","backgroundColor","randColor","propsTypes","items","PropTypes","arrayOf","shape","string","isRequired","r","Math","floor","random","g","b","FriendsListItems","isOnline","classNames","FriensList","friends","TransactionItem","type","amount","currency","Transactions","transactions","App","onClick","task1","task2","task3","task4","ReactDOM","render","backToHome","usersData","document","getElementById","friendsData","transactionsData","StrictMode"],"mappings":"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","file":"static/js/main.5278768b.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport './Profile.scss';\r\n// import userData from '../usersData.json';\r\n// console.log(userData);\r\n// const { avatar, name, tag, location, followers, views, likes } = userData;\r\n\r\n\r\n\r\nfunction Profile({profileData}) {\r\n    const { avatar, name, tag, location, stats } = profileData;\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <img className=\"profile__avatar\" src={avatar} alt={name} width=\"480\" />\r\n            <p className=\"profile__name\">{name}</p>\r\n            <p className=\"profile__info\">{tag}</p>\r\n            <p className=\"profile__info\">{location}</p>\r\n            <ul className=\"profile__stats\">\r\n                <li className=\"profile__stats__item\">\r\n                    <span className=\"profile__stats__item__name\">Followers</span>\r\n                    <span className=\"profile__stats__item__info\">{stats.followers}</span>\r\n                </li>\r\n                <li className=\"profile__stats__item\">\r\n                    <span className=\"profile__stats__item__name\">Views</span>\r\n                    <span className=\"profile__stats__item__info\">{stats.views}</span>\r\n                </li>\r\n                <li className=\"profile__stats__item\">\r\n                    <span className=\"profile__stats__item__name\">Likes</span>\r\n                    <span className=\"profile__stats__item__info\">{stats.likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Profile;","import PropTypes from 'prop-types';\r\nimport './Statistics.scss'\r\n\r\nfunction StatisticItem(props) {\r\n    const { label, percentage } = props;\r\n\r\n    return (\r\n    <>\r\n        <span className=\"statsList__item__label\">{label}</span>\r\n        <span className=\"statsList__item__info\">{percentage}%</span>\r\n    </>\r\n    )};\r\n\r\nStatisticItem.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default StatisticItem;","import PropTypes from 'prop-types';\r\nimport StatisticItem from './StatisticItem';\r\nimport './Statistics.scss'\r\n\r\nfunction Statistics({ statsData, title }) {\r\n    \r\n    return (\r\n        <section className=\"statsSaction\">\r\n            {title && <h3 className=\"stats__title\">{title.toUpperCase()}</h3>}\r\n        <ul className=\"statsList\">\r\n            {statsData.map(item => {\r\n                const { id, label, percentage } = item;\r\n                return (\r\n                    <li key={id} className=\"statsList__item\" style={{backgroundColor: randColor()}}>\r\n                        <StatisticItem label={label} percentage={percentage} />\r\n                    </li>\r\n            \r\n                )\r\n            }\r\n            )}\r\n        </ul>\r\n        </section>\r\n    );\r\n};\r\n\r\nStatistics.propsTypes = {\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n};\r\n\r\nexport default Statistics;\r\n\r\n\r\n\r\nfunction randColor() {\r\n    const r = Math.floor(Math.random() * (256));\r\n    const g = Math.floor(Math.random() * (256));\r\n    const b = Math.floor(Math.random() * (256));\r\n    const color = `rgb(${r}, ${g}, ${b})`;\r\n\r\n    return color;\r\n};\r\n\r\n","import PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport  \"./FriendsList.scss\";\r\n\r\nfunction FriendsListItems(props) {\r\n    const { name, avatar, isOnline } = props;\r\n\r\n    return (\r\n        <>\r\n            <span className={classNames(\"friendsList__item__status\", {\r\n                ['friendsList__item__status--isOnline']: isOnline,\r\n            })}>{isOnline}</span>\r\n            <img className=\"friendsList__item__avatar\" src={avatar} alt={name} width=\"180\"/>\r\n            <span className=\"friendsList__item__name\">{name}</span>\r\n        </>\r\n    )\r\n};\r\n\r\nFriendsListItems.propTypes = {\r\n    isOnline: PropTypes.bool.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default FriendsListItems;","import PropTypes from \"prop-types\";\r\nimport FriendsListItems from \"./FriensListItems\";\r\nimport \"./FriendsList.scss\";\r\n\r\nfunction FriensList(props) {\r\n    const { friends } = props;\r\n\r\n    return (\r\n        <ul className=\"friendsList\">\r\n            {friends.map(item => (\r\n                <li key={item.id} className=\"friendsList__item\">\r\n                    <FriendsListItems\r\n                        name={item.name}\r\n                        avatar={item.avatar}\r\n                        isOnline={item.isOnline}\r\n                    />\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nFriensList.propTypes = {\r\n    friendsData: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n        }),\r\n    ),\r\n};\r\n\r\nexport default FriensList;","import PropTypes from \"prop-types\";\r\nimport './Transactions.scss';\r\n\r\nfunction TransactionItem({type, amount, currency}) {\r\n    \r\n    return (\r\n        <>\r\n            <td className=\"table__cell\"><span className=\"table__cell__info\">{type}</span></td>\r\n            <td className=\"table__cell\"><span className=\"table__cell__info\">{amount}</span></td>\r\n            <td className=\"table__cell\"><span className=\"table__cell__info\">{currency}</span></td>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionItem;\r\n\r\nTransactionItem.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    amount: PropTypes.number.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n};","import PropTypes from 'prop-types';\r\nimport TransactionItem from './TransactionItem'\r\nimport './Transactions.scss';\r\n\r\nfunction Transactions({ transactions }) {\r\n    return (\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr className=\"table__header\">\r\n                    <th className=\"table__header__item\">TYPE</th>\r\n                    <th className=\"table__header__item\">AMOUNT</th>\r\n                    <th className=\"table__header__item\">CURRENCY</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {transactions.map(item => \r\n                (<tr key={item.id} className=\"table__line\">\r\n                    <TransactionItem\r\n                    type={item.type}\r\n                    amount={item.amount}\r\n                    currency={item.currency}\r\n                    />\r\n                </tr>))\r\n                }\r\n            </tbody>    \r\n        </table >\r\n    )\r\n}\r\n\r\nexport default Transactions;\r\n\r\nTransactions.propTypes = {\r\n    item: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n};\r\n\r\n","// import { ReactDOM, React } from 'react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport usersData from './components/Profile/usersData.json';\nimport Profile from './components/Profile';\nimport statsData from './components/Statistic/statisticalData.json';\nimport Statistics from './components/Statistic';\nimport friendsData from './components/FriendsList/friendsData.json';\nimport FriendsList from './components/FriendsList';\nimport transactionsData from './components/Transactions/transactionsData.json';\nimport Transactions from './components/Transactions';\n// import logo from './logo.svg';\nimport './App.css';\n\nfunction App(props) {\n    // const { avatar, name, tag, location, followers, views, likes } = props;\n    return (\n        <ul className=\"mainList\">\n            <li>\n                <button onClick={task1}>Задание 1 - Профиль социальной сети</button>\n                {/* <Profile profileData={usersData}/> */}\n            </li>\n            <li>\n                <button onClick={task2}>Задание 2 - Секция статистики</button>\n                {/* <Statistics title=\"Upload stats\" statsData={statsData}/> */}\n            </li>\n            <li>\n                <button onClick={task3}>Задание 3 - Список друзей</button>\n                {/* <FriendsList friends={friendsData} /> */}\n            </li>\n            <li>\n                <button onClick={task4}>Задание 4 - История транзакций</button>\n                {/* <Transactions transactions={transactionsData} /> */}\n            </li>\n        </ul>\n    );\n}\n\nexport default App;\n\nfunction task1() {\n    ReactDOM.render(\n    <>\n        <button onClick={backToHome} className=\"backButton\">Назад</button>\n        <Profile profileData={usersData} />\n    </>,\n    document.getElementById('root')\n    );\n};\n\nfunction task2() {\n    ReactDOM.render(\n    <>\n        <button onClick={backToHome} className=\"backButton\">Назад</button>\n        <Statistics title=\"Upload stats\" statsData={statsData}/>\n    </>,\n    document.getElementById('root')\n    );\n};\n\nfunction task3() {\n    ReactDOM.render(\n    <>\n        <button onClick={backToHome} className=\"backButton\">Назад</button>\n        <FriendsList friends={friendsData} />\n    </>,\n    document.getElementById('root')\n    );\n};\n\nfunction task4() {\n    ReactDOM.render(\n    <>\n        <button onClick={backToHome} className=\"backButton\">Назад</button>\n        <Transactions transactions={transactionsData} />\n    </>,\n     document.getElementById('root')\n    );\n};\n\nfunction backToHome() {\n    ReactDOM.render(\n        <App />,\n        document.getElementById('root')\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n<style>\n  @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700;900&display=swap');\n</style>\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}